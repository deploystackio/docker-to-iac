name: Release Process
on:
  workflow_dispatch:
    inputs:
      type:
        type: choice
        description: Choose release type
        options:
          - patch
          - minor
          - major
        default: patch
      beta:
        type: boolean
        description: Prerelease
        default: false

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: git config
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          registry-url: 'https://registry.npmjs.org'
          
      - run: npm ci
      
      # Run release-it directly with the selected version type
      - name: Perform release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          TYPE_ARG: ${{ inputs.type }}
          BETA_ARG: ${{ inputs.beta == true && '--preRelease=beta' || '' }}
        run: |
          # Execute release-it with the specified options
          npm run release -- $TYPE_ARG --ci --verbose $BETA_ARG
          
      # Get the version after release for informational purposes
      - name: Get released version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@main
        
      - name: Show release information
        run: |
          echo "::notice::ðŸš€ Released version v${{ steps.package-version.outputs.current-version }}"
          echo "::notice::ðŸ“¦ Published to npm as @deploystack/docker-to-iac@${{ steps.package-version.outputs.current-version }}"
